                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module i2c_drv
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TIMER_CheckTimeUS
                                     12 	.globl _TIMER_InitTime
                                     13 	.globl _GPIO_ReadInputPin
                                     14 	.globl _GPIO_WriteLow
                                     15 	.globl _GPIO_WriteHigh
                                     16 	.globl _GPIO_Init
                                     17 	.globl _softI2cTime
                                     18 	.globl _SoftI2CInit
                                     19 	.globl _SoftI2CStart
                                     20 	.globl _SoftI2CStop
                                     21 	.globl _SoftI2CWriteByte
                                     22 	.globl _SoftI2CReadByte
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DATA
      000000                         27 _softI2cTime::
      000000                         28 	.ds 6
                                     29 ;--------------------------------------------------------
                                     30 ; ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area INITIALIZED
                                     33 ;--------------------------------------------------------
                                     34 ; absolute external ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area DABS (ABS)
                                     37 ;--------------------------------------------------------
                                     38 ; global & static initialisations
                                     39 ;--------------------------------------------------------
                                     40 	.area HOME
                                     41 	.area GSINIT
                                     42 	.area GSFINAL
                                     43 	.area GSINIT
                                     44 ;--------------------------------------------------------
                                     45 ; Home
                                     46 ;--------------------------------------------------------
                                     47 	.area HOME
                                     48 	.area HOME
                                     49 ;--------------------------------------------------------
                                     50 ; code
                                     51 ;--------------------------------------------------------
                                     52 	.area CODE
                                     53 ;	user/i2c_drv.c: 8: void SoftI2CInit()
                                     54 ;	-----------------------------------------
                                     55 ;	 function SoftI2CInit
                                     56 ;	-----------------------------------------
      000000                         57 _SoftI2CInit:
                                     58 ;	user/i2c_drv.c: 10: SOFT_I2C_SDA_OUT;
      000000 4B B0            [ 1]   59 	push	#0xb0
      000002 4B 20            [ 1]   60 	push	#0x20
      000004 4B 05            [ 1]   61 	push	#0x05
      000006 4B 50            [ 1]   62 	push	#0x50
      000008 CDr00r00         [ 4]   63 	call	_GPIO_Init
      00000B 5B 04            [ 2]   64 	addw	sp, #4
                                     65 ;	user/i2c_drv.c: 11: SOFT_I2C_SCL_OUT;
      00000D 4B B0            [ 1]   66 	push	#0xb0
      00000F 4B 10            [ 1]   67 	push	#0x10
      000011 4B 05            [ 1]   68 	push	#0x05
      000013 4B 50            [ 1]   69 	push	#0x50
      000015 CDr00r00         [ 4]   70 	call	_GPIO_Init
      000018 5B 04            [ 2]   71 	addw	sp, #4
                                     72 ;	user/i2c_drv.c: 13: SOFT_I2C_SDA_HIGH;
      00001A 4B 20            [ 1]   73 	push	#0x20
      00001C 4B 05            [ 1]   74 	push	#0x05
      00001E 4B 50            [ 1]   75 	push	#0x50
      000020 CDr00r00         [ 4]   76 	call	_GPIO_WriteHigh
      000023 5B 03            [ 2]   77 	addw	sp, #3
                                     78 ;	user/i2c_drv.c: 14: SOFT_I2C_SCL_HIGH;      
      000025 4B 10            [ 1]   79 	push	#0x10
      000027 4B 05            [ 1]   80 	push	#0x05
      000029 4B 50            [ 1]   81 	push	#0x50
      00002B CDr00r00         [ 4]   82 	call	_GPIO_WriteHigh
      00002E 5B 03            [ 2]   83 	addw	sp, #3
                                     84 ;	user/i2c_drv.c: 15: TIMER_InitTime(&softI2cTime);
      000030 AEr00r00         [ 2]   85 	ldw	x, #_softI2cTime+0
      000033 89               [ 2]   86 	pushw	x
      000034 CDr00r00         [ 4]   87 	call	_TIMER_InitTime
      000037 85               [ 2]   88 	popw	x
      000038 81               [ 4]   89 	ret
                                     90 ;	user/i2c_drv.c: 18: void SoftI2CStart()
                                     91 ;	-----------------------------------------
                                     92 ;	 function SoftI2CStart
                                     93 ;	-----------------------------------------
      000039                         94 _SoftI2CStart:
      000039 52 04            [ 2]   95 	sub	sp, #4
                                     96 ;	user/i2c_drv.c: 20: SOFT_I2C_SCL_HIGH;
      00003B 4B 10            [ 1]   97 	push	#0x10
      00003D 4B 05            [ 1]   98 	push	#0x05
      00003F 4B 50            [ 1]   99 	push	#0x50
      000041 CDr00r00         [ 4]  100 	call	_GPIO_WriteHigh
      000044 5B 03            [ 2]  101 	addw	sp, #3
                                    102 ;	user/i2c_drv.c: 21: H_DEL;
      000046 AEr00r00         [ 2]  103 	ldw	x, #_softI2cTime+0
      000049 1F 03            [ 2]  104 	ldw	(0x03, sp), x
      00004B                        105 00101$:
      00004B 1E 03            [ 2]  106 	ldw	x, (0x03, sp)
      00004D 4B 32            [ 1]  107 	push	#0x32
      00004F 4B 00            [ 1]  108 	push	#0x00
      000051 89               [ 2]  109 	pushw	x
      000052 CDr00r00         [ 4]  110 	call	_TIMER_CheckTimeUS
      000055 5B 04            [ 2]  111 	addw	sp, #4
      000057 4D               [ 1]  112 	tnz	a
      000058 26 F1            [ 1]  113 	jrne	00101$
                                    114 ;	user/i2c_drv.c: 23: SOFT_I2C_SDA_LOW;   
      00005A 4B 20            [ 1]  115 	push	#0x20
      00005C 4B 05            [ 1]  116 	push	#0x05
      00005E 4B 50            [ 1]  117 	push	#0x50
      000060 CDr00r00         [ 4]  118 	call	_GPIO_WriteLow
      000063 5B 03            [ 2]  119 	addw	sp, #3
                                    120 ;	user/i2c_drv.c: 24: H_DEL;      
      000065 16 03            [ 2]  121 	ldw	y, (0x03, sp)
      000067 17 01            [ 2]  122 	ldw	(0x01, sp), y
      000069                        123 00104$:
      000069 1E 01            [ 2]  124 	ldw	x, (0x01, sp)
      00006B 4B 32            [ 1]  125 	push	#0x32
      00006D 4B 00            [ 1]  126 	push	#0x00
      00006F 89               [ 2]  127 	pushw	x
      000070 CDr00r00         [ 4]  128 	call	_TIMER_CheckTimeUS
      000073 5B 04            [ 2]  129 	addw	sp, #4
      000075 4D               [ 1]  130 	tnz	a
      000076 26 F1            [ 1]  131 	jrne	00104$
      000078 5B 04            [ 2]  132 	addw	sp, #4
      00007A 81               [ 4]  133 	ret
                                    134 ;	user/i2c_drv.c: 27: void SoftI2CStop()
                                    135 ;	-----------------------------------------
                                    136 ;	 function SoftI2CStop
                                    137 ;	-----------------------------------------
      00007B                        138 _SoftI2CStop:
      00007B 52 06            [ 2]  139 	sub	sp, #6
                                    140 ;	user/i2c_drv.c: 29: SOFT_I2C_SDA_LOW;
      00007D 4B 20            [ 1]  141 	push	#0x20
      00007F 4B 05            [ 1]  142 	push	#0x05
      000081 4B 50            [ 1]  143 	push	#0x50
      000083 CDr00r00         [ 4]  144 	call	_GPIO_WriteLow
      000086 5B 03            [ 2]  145 	addw	sp, #3
                                    146 ;	user/i2c_drv.c: 30: H_DEL;
      000088 AEr00r00         [ 2]  147 	ldw	x, #_softI2cTime+0
      00008B 1F 01            [ 2]  148 	ldw	(0x01, sp), x
      00008D                        149 00101$:
      00008D 1E 01            [ 2]  150 	ldw	x, (0x01, sp)
      00008F 4B 32            [ 1]  151 	push	#0x32
      000091 4B 00            [ 1]  152 	push	#0x00
      000093 89               [ 2]  153 	pushw	x
      000094 CDr00r00         [ 4]  154 	call	_TIMER_CheckTimeUS
      000097 5B 04            [ 2]  155 	addw	sp, #4
      000099 4D               [ 1]  156 	tnz	a
      00009A 26 F1            [ 1]  157 	jrne	00101$
                                    158 ;	user/i2c_drv.c: 31: SOFT_I2C_SCL_HIGH;
      00009C 4B 10            [ 1]  159 	push	#0x10
      00009E 4B 05            [ 1]  160 	push	#0x05
      0000A0 4B 50            [ 1]  161 	push	#0x50
      0000A2 CDr00r00         [ 4]  162 	call	_GPIO_WriteHigh
      0000A5 5B 03            [ 2]  163 	addw	sp, #3
                                    164 ;	user/i2c_drv.c: 32: Q_DEL;
      0000A7 16 01            [ 2]  165 	ldw	y, (0x01, sp)
      0000A9 17 05            [ 2]  166 	ldw	(0x05, sp), y
      0000AB                        167 00104$:
      0000AB 1E 05            [ 2]  168 	ldw	x, (0x05, sp)
      0000AD 4B 14            [ 1]  169 	push	#0x14
      0000AF 4B 00            [ 1]  170 	push	#0x00
      0000B1 89               [ 2]  171 	pushw	x
      0000B2 CDr00r00         [ 4]  172 	call	_TIMER_CheckTimeUS
      0000B5 5B 04            [ 2]  173 	addw	sp, #4
      0000B7 4D               [ 1]  174 	tnz	a
      0000B8 26 F1            [ 1]  175 	jrne	00104$
                                    176 ;	user/i2c_drv.c: 33: SOFT_I2C_SDA_HIGH;
      0000BA 4B 20            [ 1]  177 	push	#0x20
      0000BC 4B 05            [ 1]  178 	push	#0x05
      0000BE 4B 50            [ 1]  179 	push	#0x50
      0000C0 CDr00r00         [ 4]  180 	call	_GPIO_WriteHigh
      0000C3 5B 03            [ 2]  181 	addw	sp, #3
                                    182 ;	user/i2c_drv.c: 34: H_DEL;
      0000C5 16 01            [ 2]  183 	ldw	y, (0x01, sp)
      0000C7 17 03            [ 2]  184 	ldw	(0x03, sp), y
      0000C9                        185 00107$:
      0000C9 1E 03            [ 2]  186 	ldw	x, (0x03, sp)
      0000CB 4B 32            [ 1]  187 	push	#0x32
      0000CD 4B 00            [ 1]  188 	push	#0x00
      0000CF 89               [ 2]  189 	pushw	x
      0000D0 CDr00r00         [ 4]  190 	call	_TIMER_CheckTimeUS
      0000D3 5B 04            [ 2]  191 	addw	sp, #4
      0000D5 4D               [ 1]  192 	tnz	a
      0000D6 26 F1            [ 1]  193 	jrne	00107$
      0000D8 5B 06            [ 2]  194 	addw	sp, #6
      0000DA 81               [ 4]  195 	ret
                                    196 ;	user/i2c_drv.c: 37: uint8_t SoftI2CWriteByte(uint8_t data)
                                    197 ;	-----------------------------------------
                                    198 ;	 function SoftI2CWriteByte
                                    199 ;	-----------------------------------------
      0000DB                        200 _SoftI2CWriteByte:
      0000DB 52 12            [ 2]  201 	sub	sp, #18
                                    202 ;	user/i2c_drv.c: 41: for(i=0;i<8;i++)
      0000DD AEr00r00         [ 2]  203 	ldw	x, #_softI2cTime+0
      0000E0 1F 11            [ 2]  204 	ldw	(0x11, sp), x
      0000E2 16 11            [ 2]  205 	ldw	y, (0x11, sp)
      0000E4 17 0D            [ 2]  206 	ldw	(0x0d, sp), y
      0000E6 16 11            [ 2]  207 	ldw	y, (0x11, sp)
      0000E8 17 03            [ 2]  208 	ldw	(0x03, sp), y
      0000EA 16 11            [ 2]  209 	ldw	y, (0x11, sp)
      0000EC 17 05            [ 2]  210 	ldw	(0x05, sp), y
      0000EE 0F 02            [ 1]  211 	clr	(0x02, sp)
      0000F0                        212 00129$:
                                    213 ;	user/i2c_drv.c: 43: SOFT_I2C_SCL_LOW;
      0000F0 4B 10            [ 1]  214 	push	#0x10
      0000F2 4B 05            [ 1]  215 	push	#0x05
      0000F4 4B 50            [ 1]  216 	push	#0x50
      0000F6 CDr00r00         [ 4]  217 	call	_GPIO_WriteLow
      0000F9 5B 03            [ 2]  218 	addw	sp, #3
                                    219 ;	user/i2c_drv.c: 44: Q_DEL;
      0000FB                        220 00101$:
      0000FB 1E 11            [ 2]  221 	ldw	x, (0x11, sp)
      0000FD 4B 14            [ 1]  222 	push	#0x14
      0000FF 4B 00            [ 1]  223 	push	#0x00
      000101 89               [ 2]  224 	pushw	x
      000102 CDr00r00         [ 4]  225 	call	_TIMER_CheckTimeUS
      000105 5B 04            [ 2]  226 	addw	sp, #4
      000107 4D               [ 1]  227 	tnz	a
      000108 26 F1            [ 1]  228 	jrne	00101$
                                    229 ;	user/i2c_drv.c: 46: if(data & 0x80)
      00010A 0D 15            [ 1]  230 	tnz	(0x15, sp)
      00010C 2A 0D            [ 1]  231 	jrpl	00105$
                                    232 ;	user/i2c_drv.c: 47: SOFT_I2C_SDA_HIGH;
      00010E 4B 20            [ 1]  233 	push	#0x20
      000110 4B 05            [ 1]  234 	push	#0x05
      000112 4B 50            [ 1]  235 	push	#0x50
      000114 CDr00r00         [ 4]  236 	call	_GPIO_WriteHigh
      000117 5B 03            [ 2]  237 	addw	sp, #3
      000119 20 0B            [ 2]  238 	jra	00107$
      00011B                        239 00105$:
                                    240 ;	user/i2c_drv.c: 49: SOFT_I2C_SDA_LOW;        
      00011B 4B 20            [ 1]  241 	push	#0x20
      00011D 4B 05            [ 1]  242 	push	#0x05
      00011F 4B 50            [ 1]  243 	push	#0x50
      000121 CDr00r00         [ 4]  244 	call	_GPIO_WriteLow
      000124 5B 03            [ 2]  245 	addw	sp, #3
                                    246 ;	user/i2c_drv.c: 50: H_DEL;
      000126                        247 00107$:
      000126 1E 0D            [ 2]  248 	ldw	x, (0x0d, sp)
      000128 4B 32            [ 1]  249 	push	#0x32
      00012A 4B 00            [ 1]  250 	push	#0x00
      00012C 89               [ 2]  251 	pushw	x
      00012D CDr00r00         [ 4]  252 	call	_TIMER_CheckTimeUS
      000130 5B 04            [ 2]  253 	addw	sp, #4
      000132 4D               [ 1]  254 	tnz	a
      000133 26 F1            [ 1]  255 	jrne	00107$
                                    256 ;	user/i2c_drv.c: 52: SOFT_I2C_SCL_HIGH;
      000135 4B 10            [ 1]  257 	push	#0x10
      000137 4B 05            [ 1]  258 	push	#0x05
      000139 4B 50            [ 1]  259 	push	#0x50
      00013B CDr00r00         [ 4]  260 	call	_GPIO_WriteHigh
      00013E 5B 03            [ 2]  261 	addw	sp, #3
                                    262 ;	user/i2c_drv.c: 53: H_DEL;
      000140                        263 00110$:
      000140 1E 03            [ 2]  264 	ldw	x, (0x03, sp)
      000142 4B 32            [ 1]  265 	push	#0x32
      000144 4B 00            [ 1]  266 	push	#0x00
      000146 89               [ 2]  267 	pushw	x
      000147 CDr00r00         [ 4]  268 	call	_TIMER_CheckTimeUS
      00014A 5B 04            [ 2]  269 	addw	sp, #4
      00014C 4D               [ 1]  270 	tnz	a
      00014D 26 F1            [ 1]  271 	jrne	00110$
                                    272 ;	user/i2c_drv.c: 59: data=data<<1;
      00014F 7B 15            [ 1]  273 	ld	a, (0x15, sp)
      000151 48               [ 1]  274 	sll	a
      000152 6B 15            [ 1]  275 	ld	(0x15, sp), a
                                    276 ;	user/i2c_drv.c: 60: Q_DEL;
      000154                        277 00113$:
      000154 1E 05            [ 2]  278 	ldw	x, (0x05, sp)
      000156 4B 14            [ 1]  279 	push	#0x14
      000158 4B 00            [ 1]  280 	push	#0x00
      00015A 89               [ 2]  281 	pushw	x
      00015B CDr00r00         [ 4]  282 	call	_TIMER_CheckTimeUS
      00015E 5B 04            [ 2]  283 	addw	sp, #4
      000160 4D               [ 1]  284 	tnz	a
      000161 26 F1            [ 1]  285 	jrne	00113$
                                    286 ;	user/i2c_drv.c: 41: for(i=0;i<8;i++)
      000163 0C 02            [ 1]  287 	inc	(0x02, sp)
      000165 7B 02            [ 1]  288 	ld	a, (0x02, sp)
      000167 A1 08            [ 1]  289 	cp	a, #0x08
      000169 25 85            [ 1]  290 	jrc	00129$
                                    291 ;	user/i2c_drv.c: 64: SOFT_I2C_SCL_LOW;
      00016B 4B 10            [ 1]  292 	push	#0x10
      00016D 4B 05            [ 1]  293 	push	#0x05
      00016F 4B 50            [ 1]  294 	push	#0x50
      000171 CDr00r00         [ 4]  295 	call	_GPIO_WriteLow
      000174 5B 03            [ 2]  296 	addw	sp, #3
                                    297 ;	user/i2c_drv.c: 65: Q_DEL;
      000176 16 11            [ 2]  298 	ldw	y, (0x11, sp)
      000178 17 0F            [ 2]  299 	ldw	(0x0f, sp), y
      00017A                        300 00117$:
      00017A 1E 0F            [ 2]  301 	ldw	x, (0x0f, sp)
      00017C 4B 14            [ 1]  302 	push	#0x14
      00017E 4B 00            [ 1]  303 	push	#0x00
      000180 89               [ 2]  304 	pushw	x
      000181 CDr00r00         [ 4]  305 	call	_TIMER_CheckTimeUS
      000184 5B 04            [ 2]  306 	addw	sp, #4
      000186 4D               [ 1]  307 	tnz	a
      000187 26 F1            [ 1]  308 	jrne	00117$
                                    309 ;	user/i2c_drv.c: 67: SOFT_I2C_SDA_HIGH;      
      000189 4B 20            [ 1]  310 	push	#0x20
      00018B 4B 05            [ 1]  311 	push	#0x05
      00018D 4B 50            [ 1]  312 	push	#0x50
      00018F CDr00r00         [ 4]  313 	call	_GPIO_WriteHigh
      000192 5B 03            [ 2]  314 	addw	sp, #3
                                    315 ;	user/i2c_drv.c: 68: H_DEL;
      000194 16 11            [ 2]  316 	ldw	y, (0x11, sp)
      000196 17 0B            [ 2]  317 	ldw	(0x0b, sp), y
      000198                        318 00120$:
      000198 1E 0B            [ 2]  319 	ldw	x, (0x0b, sp)
      00019A 4B 32            [ 1]  320 	push	#0x32
      00019C 4B 00            [ 1]  321 	push	#0x00
      00019E 89               [ 2]  322 	pushw	x
      00019F CDr00r00         [ 4]  323 	call	_TIMER_CheckTimeUS
      0001A2 5B 04            [ 2]  324 	addw	sp, #4
      0001A4 4D               [ 1]  325 	tnz	a
      0001A5 26 F1            [ 1]  326 	jrne	00120$
                                    327 ;	user/i2c_drv.c: 70: SOFT_I2C_SCL_HIGH;
      0001A7 4B 10            [ 1]  328 	push	#0x10
      0001A9 4B 05            [ 1]  329 	push	#0x05
      0001AB 4B 50            [ 1]  330 	push	#0x50
      0001AD CDr00r00         [ 4]  331 	call	_GPIO_WriteHigh
      0001B0 5B 03            [ 2]  332 	addw	sp, #3
                                    333 ;	user/i2c_drv.c: 71: H_DEL;  
      0001B2 16 11            [ 2]  334 	ldw	y, (0x11, sp)
      0001B4 17 09            [ 2]  335 	ldw	(0x09, sp), y
      0001B6                        336 00123$:
      0001B6 1E 09            [ 2]  337 	ldw	x, (0x09, sp)
      0001B8 4B 32            [ 1]  338 	push	#0x32
      0001BA 4B 00            [ 1]  339 	push	#0x00
      0001BC 89               [ 2]  340 	pushw	x
      0001BD CDr00r00         [ 4]  341 	call	_TIMER_CheckTimeUS
      0001C0 5B 04            [ 2]  342 	addw	sp, #4
      0001C2 4D               [ 1]  343 	tnz	a
      0001C3 26 F1            [ 1]  344 	jrne	00123$
                                    345 ;	user/i2c_drv.c: 73: SOFT_I2C_SDA_IN;
      0001C5 4B 00            [ 1]  346 	push	#0x00
      0001C7 4B 20            [ 1]  347 	push	#0x20
      0001C9 4B 05            [ 1]  348 	push	#0x05
      0001CB 4B 50            [ 1]  349 	push	#0x50
      0001CD CDr00r00         [ 4]  350 	call	_GPIO_Init
      0001D0 5B 04            [ 2]  351 	addw	sp, #4
                                    352 ;	user/i2c_drv.c: 74: ack=!(SOFT_I2C_SDA_PIN & (1<<SOFT_SDA));
      0001D2 4B 20            [ 1]  353 	push	#0x20
      0001D4 4B 05            [ 1]  354 	push	#0x05
      0001D6 4B 50            [ 1]  355 	push	#0x50
      0001D8 CDr00r00         [ 4]  356 	call	_GPIO_ReadInputPin
      0001DB 5B 03            [ 2]  357 	addw	sp, #3
      0001DD 44               [ 1]  358 	srl	a
      0001DE 44               [ 1]  359 	srl	a
      0001DF A4 01            [ 1]  360 	and	a, #0x01
      0001E1 A0 01            [ 1]  361 	sub	a, #0x01
      0001E3 4F               [ 1]  362 	clr	a
      0001E4 49               [ 1]  363 	rlc	a
      0001E5 6B 01            [ 1]  364 	ld	(0x01, sp), a
                                    365 ;	user/i2c_drv.c: 75: SOFT_I2C_SDA_OUT;
      0001E7 4B B0            [ 1]  366 	push	#0xb0
      0001E9 4B 20            [ 1]  367 	push	#0x20
      0001EB 4B 05            [ 1]  368 	push	#0x05
      0001ED 4B 50            [ 1]  369 	push	#0x50
      0001EF CDr00r00         [ 4]  370 	call	_GPIO_Init
      0001F2 5B 04            [ 2]  371 	addw	sp, #4
                                    372 ;	user/i2c_drv.c: 77: SOFT_I2C_SCL_LOW;
      0001F4 4B 10            [ 1]  373 	push	#0x10
      0001F6 4B 05            [ 1]  374 	push	#0x05
      0001F8 4B 50            [ 1]  375 	push	#0x50
      0001FA CDr00r00         [ 4]  376 	call	_GPIO_WriteLow
      0001FD 5B 03            [ 2]  377 	addw	sp, #3
                                    378 ;	user/i2c_drv.c: 78: H_DEL;
      0001FF 16 11            [ 2]  379 	ldw	y, (0x11, sp)
      000201 17 07            [ 2]  380 	ldw	(0x07, sp), y
      000203                        381 00126$:
      000203 1E 07            [ 2]  382 	ldw	x, (0x07, sp)
      000205 4B 32            [ 1]  383 	push	#0x32
      000207 4B 00            [ 1]  384 	push	#0x00
      000209 89               [ 2]  385 	pushw	x
      00020A CDr00r00         [ 4]  386 	call	_TIMER_CheckTimeUS
      00020D 5B 04            [ 2]  387 	addw	sp, #4
      00020F 4D               [ 1]  388 	tnz	a
      000210 26 F1            [ 1]  389 	jrne	00126$
                                    390 ;	user/i2c_drv.c: 80: return ack;   
      000212 7B 01            [ 1]  391 	ld	a, (0x01, sp)
      000214 5B 12            [ 2]  392 	addw	sp, #18
      000216 81               [ 4]  393 	ret
                                    394 ;	user/i2c_drv.c: 83: uint8_t SoftI2CReadByte(uint8_t ack)
                                    395 ;	-----------------------------------------
                                    396 ;	 function SoftI2CReadByte
                                    397 ;	-----------------------------------------
      000217                        398 _SoftI2CReadByte:
      000217 52 12            [ 2]  399 	sub	sp, #18
                                    400 ;	user/i2c_drv.c: 85: uint8_t data=0x00;
      000219 0F 02            [ 1]  401 	clr	(0x02, sp)
                                    402 ;	user/i2c_drv.c: 87: SOFT_I2C_SDA_IN;
      00021B 4B 00            [ 1]  403 	push	#0x00
      00021D 4B 20            [ 1]  404 	push	#0x20
      00021F 4B 05            [ 1]  405 	push	#0x05
      000221 4B 50            [ 1]  406 	push	#0x50
      000223 CDr00r00         [ 4]  407 	call	_GPIO_Init
      000226 5B 04            [ 2]  408 	addw	sp, #4
                                    409 ;	user/i2c_drv.c: 88: for(i=0;i<8;i++)
      000228 AEr00r00         [ 2]  410 	ldw	x, #_softI2cTime+0
      00022B 1F 11            [ 2]  411 	ldw	(0x11, sp), x
      00022D 16 11            [ 2]  412 	ldw	y, (0x11, sp)
      00022F 17 0F            [ 2]  413 	ldw	(0x0f, sp), y
      000231 16 11            [ 2]  414 	ldw	y, (0x11, sp)
      000233 17 0D            [ 2]  415 	ldw	(0x0d, sp), y
      000235 0F 01            [ 1]  416 	clr	(0x01, sp)
      000237                        417 00128$:
                                    418 ;	user/i2c_drv.c: 90: SOFT_I2C_SCL_LOW;
      000237 4B 10            [ 1]  419 	push	#0x10
      000239 4B 05            [ 1]  420 	push	#0x05
      00023B 4B 50            [ 1]  421 	push	#0x50
      00023D CDr00r00         [ 4]  422 	call	_GPIO_WriteLow
      000240 5B 03            [ 2]  423 	addw	sp, #3
                                    424 ;	user/i2c_drv.c: 91: H_DEL;
      000242                        425 00101$:
      000242 16 11            [ 2]  426 	ldw	y, (0x11, sp)
      000244 17 0B            [ 2]  427 	ldw	(0x0b, sp), y
      000246 4B 32            [ 1]  428 	push	#0x32
      000248 4B 00            [ 1]  429 	push	#0x00
      00024A 1E 0D            [ 2]  430 	ldw	x, (0x0d, sp)
      00024C 89               [ 2]  431 	pushw	x
      00024D CDr00r00         [ 4]  432 	call	_TIMER_CheckTimeUS
      000250 5B 04            [ 2]  433 	addw	sp, #4
      000252 4D               [ 1]  434 	tnz	a
      000253 26 ED            [ 1]  435 	jrne	00101$
                                    436 ;	user/i2c_drv.c: 92: SOFT_I2C_SCL_HIGH;
      000255 4B 10            [ 1]  437 	push	#0x10
      000257 4B 05            [ 1]  438 	push	#0x05
      000259 4B 50            [ 1]  439 	push	#0x50
      00025B CDr00r00         [ 4]  440 	call	_GPIO_WriteHigh
      00025E 5B 03            [ 2]  441 	addw	sp, #3
                                    442 ;	user/i2c_drv.c: 93: H_DEL;
      000260                        443 00104$:
      000260 1E 0F            [ 2]  444 	ldw	x, (0x0f, sp)
      000262 4B 32            [ 1]  445 	push	#0x32
      000264 4B 00            [ 1]  446 	push	#0x00
      000266 89               [ 2]  447 	pushw	x
      000267 CDr00r00         [ 4]  448 	call	_TIMER_CheckTimeUS
      00026A 5B 04            [ 2]  449 	addw	sp, #4
      00026C 4D               [ 1]  450 	tnz	a
      00026D 26 F1            [ 1]  451 	jrne	00104$
                                    452 ;	user/i2c_drv.c: 98: if(SOFT_I2C_SDA_PIN &(1<<SOFT_SDA))
      00026F 4B 20            [ 1]  453 	push	#0x20
      000271 4B 05            [ 1]  454 	push	#0x05
      000273 4B 50            [ 1]  455 	push	#0x50
      000275 CDr00r00         [ 4]  456 	call	_GPIO_ReadInputPin
      000278 5B 03            [ 2]  457 	addw	sp, #3
      00027A A5 04            [ 1]  458 	bcp	a, #0x04
      00027C 27 11            [ 1]  459 	jreq	00109$
                                    460 ;	user/i2c_drv.c: 99: data|=(0x80>>i);    
      00027E A6 80            [ 1]  461 	ld	a, #0x80
      000280 88               [ 1]  462 	push	a
      000281 7B 02            [ 1]  463 	ld	a, (0x02, sp)
      000283 27 05            [ 1]  464 	jreq	00209$
      000285                        465 00208$:
      000285 04 01            [ 1]  466 	srl	(1, sp)
      000287 4A               [ 1]  467 	dec	a
      000288 26 FB            [ 1]  468 	jrne	00208$
      00028A                        469 00209$:
      00028A 84               [ 1]  470 	pop	a
      00028B 1A 02            [ 1]  471 	or	a, (0x02, sp)
      00028D 6B 02            [ 1]  472 	ld	(0x02, sp), a
                                    473 ;	user/i2c_drv.c: 101: Q_DEL;
      00028F                        474 00109$:
      00028F 1E 0D            [ 2]  475 	ldw	x, (0x0d, sp)
      000291 4B 14            [ 1]  476 	push	#0x14
      000293 4B 00            [ 1]  477 	push	#0x00
      000295 89               [ 2]  478 	pushw	x
      000296 CDr00r00         [ 4]  479 	call	_TIMER_CheckTimeUS
      000299 5B 04            [ 2]  480 	addw	sp, #4
      00029B 4D               [ 1]  481 	tnz	a
      00029C 26 F1            [ 1]  482 	jrne	00109$
                                    483 ;	user/i2c_drv.c: 88: for(i=0;i<8;i++)
      00029E 0C 01            [ 1]  484 	inc	(0x01, sp)
      0002A0 7B 01            [ 1]  485 	ld	a, (0x01, sp)
      0002A2 A1 08            [ 1]  486 	cp	a, #0x08
      0002A4 25 91            [ 1]  487 	jrc	00128$
                                    488 ;	user/i2c_drv.c: 103: SOFT_I2C_SDA_OUT;
      0002A6 4B B0            [ 1]  489 	push	#0xb0
      0002A8 4B 20            [ 1]  490 	push	#0x20
      0002AA 4B 05            [ 1]  491 	push	#0x05
      0002AC 4B 50            [ 1]  492 	push	#0x50
      0002AE CDr00r00         [ 4]  493 	call	_GPIO_Init
      0002B1 5B 04            [ 2]  494 	addw	sp, #4
                                    495 ;	user/i2c_drv.c: 104: SOFT_I2C_SCL_LOW;
      0002B3 4B 10            [ 1]  496 	push	#0x10
      0002B5 4B 05            [ 1]  497 	push	#0x05
      0002B7 4B 50            [ 1]  498 	push	#0x50
      0002B9 CDr00r00         [ 4]  499 	call	_GPIO_WriteLow
      0002BC 5B 03            [ 2]  500 	addw	sp, #3
                                    501 ;	user/i2c_drv.c: 105: Q_DEL;                      //Soft_I2C_Put_Ack  
      0002BE 16 11            [ 2]  502 	ldw	y, (0x11, sp)
      0002C0 17 09            [ 2]  503 	ldw	(0x09, sp), y
      0002C2                        504 00113$:
      0002C2 1E 09            [ 2]  505 	ldw	x, (0x09, sp)
      0002C4 4B 14            [ 1]  506 	push	#0x14
      0002C6 4B 00            [ 1]  507 	push	#0x00
      0002C8 89               [ 2]  508 	pushw	x
      0002C9 CDr00r00         [ 4]  509 	call	_TIMER_CheckTimeUS
      0002CC 5B 04            [ 2]  510 	addw	sp, #4
      0002CE 4D               [ 1]  511 	tnz	a
      0002CF 26 F1            [ 1]  512 	jrne	00113$
                                    513 ;	user/i2c_drv.c: 106: if(ack)
      0002D1 0D 15            [ 1]  514 	tnz	(0x15, sp)
      0002D3 27 0D            [ 1]  515 	jreq	00117$
                                    516 ;	user/i2c_drv.c: 108: SOFT_I2C_SDA_LOW;   
      0002D5 4B 20            [ 1]  517 	push	#0x20
      0002D7 4B 05            [ 1]  518 	push	#0x05
      0002D9 4B 50            [ 1]  519 	push	#0x50
      0002DB CDr00r00         [ 4]  520 	call	_GPIO_WriteLow
      0002DE 5B 03            [ 2]  521 	addw	sp, #3
      0002E0 20 0B            [ 2]  522 	jra	00144$
      0002E2                        523 00117$:
                                    524 ;	user/i2c_drv.c: 112: SOFT_I2C_SDA_HIGH;
      0002E2 4B 20            [ 1]  525 	push	#0x20
      0002E4 4B 05            [ 1]  526 	push	#0x05
      0002E6 4B 50            [ 1]  527 	push	#0x50
      0002E8 CDr00r00         [ 4]  528 	call	_GPIO_WriteHigh
      0002EB 5B 03            [ 2]  529 	addw	sp, #3
                                    530 ;	user/i2c_drv.c: 114: H_DEL;   
      0002ED                        531 00144$:
      0002ED 16 11            [ 2]  532 	ldw	y, (0x11, sp)
      0002EF 17 07            [ 2]  533 	ldw	(0x07, sp), y
      0002F1                        534 00119$:
      0002F1 1E 07            [ 2]  535 	ldw	x, (0x07, sp)
      0002F3 4B 32            [ 1]  536 	push	#0x32
      0002F5 4B 00            [ 1]  537 	push	#0x00
      0002F7 89               [ 2]  538 	pushw	x
      0002F8 CDr00r00         [ 4]  539 	call	_TIMER_CheckTimeUS
      0002FB 5B 04            [ 2]  540 	addw	sp, #4
      0002FD 4D               [ 1]  541 	tnz	a
      0002FE 26 F1            [ 1]  542 	jrne	00119$
                                    543 ;	user/i2c_drv.c: 115: SOFT_I2C_SCL_HIGH;
      000300 4B 10            [ 1]  544 	push	#0x10
      000302 4B 05            [ 1]  545 	push	#0x05
      000304 4B 50            [ 1]  546 	push	#0x50
      000306 CDr00r00         [ 4]  547 	call	_GPIO_WriteHigh
      000309 5B 03            [ 2]  548 	addw	sp, #3
                                    549 ;	user/i2c_drv.c: 116: H_DEL;   
      00030B 16 11            [ 2]  550 	ldw	y, (0x11, sp)
      00030D 17 05            [ 2]  551 	ldw	(0x05, sp), y
      00030F                        552 00122$:
      00030F 1E 05            [ 2]  553 	ldw	x, (0x05, sp)
      000311 4B 32            [ 1]  554 	push	#0x32
      000313 4B 00            [ 1]  555 	push	#0x00
      000315 89               [ 2]  556 	pushw	x
      000316 CDr00r00         [ 4]  557 	call	_TIMER_CheckTimeUS
      000319 5B 04            [ 2]  558 	addw	sp, #4
      00031B 4D               [ 1]  559 	tnz	a
      00031C 26 F1            [ 1]  560 	jrne	00122$
                                    561 ;	user/i2c_drv.c: 117: SOFT_I2C_SCL_LOW;
      00031E 4B 10            [ 1]  562 	push	#0x10
      000320 4B 05            [ 1]  563 	push	#0x05
      000322 4B 50            [ 1]  564 	push	#0x50
      000324 CDr00r00         [ 4]  565 	call	_GPIO_WriteLow
      000327 5B 03            [ 2]  566 	addw	sp, #3
                                    567 ;	user/i2c_drv.c: 118: H_DEL;           
      000329 16 11            [ 2]  568 	ldw	y, (0x11, sp)
      00032B 17 03            [ 2]  569 	ldw	(0x03, sp), y
      00032D                        570 00125$:
      00032D 1E 03            [ 2]  571 	ldw	x, (0x03, sp)
      00032F 4B 32            [ 1]  572 	push	#0x32
      000331 4B 00            [ 1]  573 	push	#0x00
      000333 89               [ 2]  574 	pushw	x
      000334 CDr00r00         [ 4]  575 	call	_TIMER_CheckTimeUS
      000337 5B 04            [ 2]  576 	addw	sp, #4
      000339 4D               [ 1]  577 	tnz	a
      00033A 26 F1            [ 1]  578 	jrne	00125$
                                    579 ;	user/i2c_drv.c: 119: return data;  
      00033C 7B 02            [ 1]  580 	ld	a, (0x02, sp)
      00033E 5B 12            [ 2]  581 	addw	sp, #18
      000340 81               [ 4]  582 	ret
                                    583 	.area CODE
                                    584 	.area INITIALIZER
                                    585 	.area CABS (ABS)
