                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module rtc
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _DS1307Write
                                     12 	.globl _DS1307Read
                                     13 	.globl _mktime
                                     14 	.globl _localtime
                                     15 	.globl _SoftI2CReadByte
                                     16 	.globl _SoftI2CWriteByte
                                     17 	.globl _SoftI2CStop
                                     18 	.globl _SoftI2CStart
                                     19 	.globl _SoftI2CInit
                                     20 	.globl _dayTime
                                     21 	.globl _RTC_Init
                                     22 	.globl _RTC_GetDateTime
                                     23 	.globl _RTC_SetDateTime
                                     24 	.globl _BCD2BIN
                                     25 	.globl _BIN2BCD
                                     26 	.globl _RTC_CalcTime
                                     27 	.globl _RTC_GetUnixTimestamp
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DATA
      000000                         32 _dayTime::
      000000                         33 	.ds 7
                                     34 ;--------------------------------------------------------
                                     35 ; ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area INITIALIZED
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; global & static initialisations
                                     44 ;--------------------------------------------------------
                                     45 	.area HOME
                                     46 	.area GSINIT
                                     47 	.area GSFINAL
                                     48 	.area GSINIT
                                     49 ;--------------------------------------------------------
                                     50 ; Home
                                     51 ;--------------------------------------------------------
                                     52 	.area HOME
                                     53 	.area HOME
                                     54 ;--------------------------------------------------------
                                     55 ; code
                                     56 ;--------------------------------------------------------
                                     57 	.area CODE
                                     58 ;	user/rtc.c: 7: void RTC_Init(void)
                                     59 ;	-----------------------------------------
                                     60 ;	 function RTC_Init
                                     61 ;	-----------------------------------------
      000000                         62 _RTC_Init:
      000000 89               [ 2]   63 	pushw	x
                                     64 ;	user/rtc.c: 9: SoftI2CInit(); 
      000001 CDr00r00         [ 4]   65 	call	_SoftI2CInit
                                     66 ;	user/rtc.c: 10: dayTime.sec = 1;
      000004 AEr00r00         [ 2]   67 	ldw	x, #_dayTime+0
      000007 A6 01            [ 1]   68 	ld	a, #0x01
      000009 F7               [ 1]   69 	ld	(x), a
                                     70 ;	user/rtc.c: 11: dayTime.min = 8;
      00000A AEr00r00         [ 2]   71 	ldw	x, #_dayTime+0
      00000D 1F 01            [ 2]   72 	ldw	(0x01, sp), x
      00000F 1E 01            [ 2]   73 	ldw	x, (0x01, sp)
      000011 5C               [ 2]   74 	incw	x
      000012 A6 08            [ 1]   75 	ld	a, #0x08
      000014 F7               [ 1]   76 	ld	(x), a
                                     77 ;	user/rtc.c: 12: dayTime.hour = 11;
      000015 1E 01            [ 2]   78 	ldw	x, (0x01, sp)
      000017 5C               [ 2]   79 	incw	x
      000018 5C               [ 2]   80 	incw	x
      000019 A6 0B            [ 1]   81 	ld	a, #0x0b
      00001B F7               [ 1]   82 	ld	(x), a
                                     83 ;	user/rtc.c: 13: dayTime.day = 1;
      00001C 1E 01            [ 2]   84 	ldw	x, (0x01, sp)
      00001E A6 01            [ 1]   85 	ld	a, #0x01
      000020 E7 03            [ 1]   86 	ld	(0x0003, x), a
                                     87 ;	user/rtc.c: 14: dayTime.date = 16;
      000022 1E 01            [ 2]   88 	ldw	x, (0x01, sp)
      000024 A6 10            [ 1]   89 	ld	a, #0x10
      000026 E7 04            [ 1]   90 	ld	(0x0004, x), a
                                     91 ;	user/rtc.c: 15: dayTime.month = 8;
      000028 1E 01            [ 2]   92 	ldw	x, (0x01, sp)
      00002A A6 08            [ 1]   93 	ld	a, #0x08
      00002C E7 05            [ 1]   94 	ld	(0x0005, x), a
                                     95 ;	user/rtc.c: 16: dayTime.year = 15;
      00002E 1E 01            [ 2]   96 	ldw	x, (0x01, sp)
      000030 A6 0F            [ 1]   97 	ld	a, #0x0f
      000032 E7 06            [ 1]   98 	ld	(0x0006, x), a
                                     99 ;	user/rtc.c: 17: RTC_SetDateTime(&dayTime);
      000034 1E 01            [ 2]  100 	ldw	x, (0x01, sp)
      000036 89               [ 2]  101 	pushw	x
      000037 CDr01r91         [ 4]  102 	call	_RTC_SetDateTime
      00003A 5B 04            [ 2]  103 	addw	sp, #4
      00003C 81               [ 4]  104 	ret
                                    105 ;	user/rtc.c: 30: uint8_t DS1307Read(uint8_t address,uint8_t *data)
                                    106 ;	-----------------------------------------
                                    107 ;	 function DS1307Read
                                    108 ;	-----------------------------------------
      00003D                        109 _DS1307Read:
      00003D 88               [ 1]  110 	push	a
                                    111 ;	user/rtc.c: 33: disableInterrupts();
      00003E 9B               [ 1]  112 	sim
                                    113 ;	user/rtc.c: 35: SoftI2CStart();   
      00003F CDr00r00         [ 4]  114 	call	_SoftI2CStart
                                    115 ;	user/rtc.c: 37: res=SoftI2CWriteByte(DS1307_SLA_W); //DS1307 address + W   
      000042 4B D0            [ 1]  116 	push	#0xd0
      000044 CDr00r00         [ 4]  117 	call	_SoftI2CWriteByte
      000047 5B 01            [ 2]  118 	addw	sp, #1
                                    119 ;	user/rtc.c: 39: if(!res)    return FALSE;   
      000049 4D               [ 1]  120 	tnz	a
      00004A 26 03            [ 1]  121 	jrne	00102$
      00004C 4F               [ 1]  122 	clr	a
      00004D 20 3A            [ 2]  123 	jra	00109$
      00004F                        124 00102$:
                                    125 ;	user/rtc.c: 41: res=SoftI2CWriteByte(address);
      00004F 7B 04            [ 1]  126 	ld	a, (0x04, sp)
      000051 88               [ 1]  127 	push	a
      000052 CDr00r00         [ 4]  128 	call	_SoftI2CWriteByte
      000055 5B 01            [ 2]  129 	addw	sp, #1
                                    130 ;	user/rtc.c: 43: if(!res)    return FALSE;
      000057 4D               [ 1]  131 	tnz	a
      000058 26 03            [ 1]  132 	jrne	00104$
      00005A 4F               [ 1]  133 	clr	a
      00005B 20 2C            [ 2]  134 	jra	00109$
      00005D                        135 00104$:
                                    136 ;	user/rtc.c: 45: SoftI2CStart();
      00005D CDr00r00         [ 4]  137 	call	_SoftI2CStart
                                    138 ;	user/rtc.c: 47: res=SoftI2CWriteByte(DS1307_SLA_R); //DS1307 Address + R
      000060 4B D1            [ 1]  139 	push	#0xd1
      000062 CDr00r00         [ 4]  140 	call	_SoftI2CWriteByte
      000065 5B 01            [ 2]  141 	addw	sp, #1
      000067 6B 01            [ 1]  142 	ld	(0x01, sp), a
                                    143 ;	user/rtc.c: 49: if(!res)    return FALSE;
      000069 0D 01            [ 1]  144 	tnz	(0x01, sp)
      00006B 26 03            [ 1]  145 	jrne	00106$
      00006D 4F               [ 1]  146 	clr	a
      00006E 20 19            [ 2]  147 	jra	00109$
      000070                        148 00106$:
                                    149 ;	user/rtc.c: 51: *data=SoftI2CReadByte(0);  
      000070 1E 05            [ 2]  150 	ldw	x, (0x05, sp)
      000072 89               [ 2]  151 	pushw	x
      000073 4B 00            [ 1]  152 	push	#0x00
      000075 CDr00r00         [ 4]  153 	call	_SoftI2CReadByte
      000078 5B 01            [ 2]  154 	addw	sp, #1
      00007A 85               [ 2]  155 	popw	x
      00007B F7               [ 1]  156 	ld	(x), a
                                    157 ;	user/rtc.c: 53: if(!res)    return FALSE;   
      00007C 0D 01            [ 1]  158 	tnz	(0x01, sp)
      00007E 26 03            [ 1]  159 	jrne	00108$
      000080 4F               [ 1]  160 	clr	a
      000081 20 06            [ 2]  161 	jra	00109$
      000083                        162 00108$:
                                    163 ;	user/rtc.c: 55: SoftI2CStop();
      000083 CDr00r00         [ 4]  164 	call	_SoftI2CStop
                                    165 ;	user/rtc.c: 56: enableInterrupts();
      000086 9A               [ 1]  166 	rim
                                    167 ;	user/rtc.c: 57: return TRUE;
      000087 A6 01            [ 1]  168 	ld	a, #0x01
      000089                        169 00109$:
      000089 5B 01            [ 2]  170 	addw	sp, #1
      00008B 81               [ 4]  171 	ret
                                    172 ;	user/rtc.c: 71: uint8_t DS1307Write(uint8_t address,uint8_t data)
                                    173 ;	-----------------------------------------
                                    174 ;	 function DS1307Write
                                    175 ;	-----------------------------------------
      00008C                        176 _DS1307Write:
                                    177 ;	user/rtc.c: 74: disableInterrupts();
      00008C 9B               [ 1]  178 	sim
                                    179 ;	user/rtc.c: 76: SoftI2CStart();    
      00008D CDr00r00         [ 4]  180 	call	_SoftI2CStart
                                    181 ;	user/rtc.c: 78: res=SoftI2CWriteByte(DS1307_SLA_W); //DS1307 address + W    
      000090 4B D0            [ 1]  182 	push	#0xd0
      000092 CDr00r00         [ 4]  183 	call	_SoftI2CWriteByte
      000095 5B 01            [ 2]  184 	addw	sp, #1
                                    185 ;	user/rtc.c: 80: if(!res)    return FALSE;
      000097 4D               [ 1]  186 	tnz	a
      000098 26 02            [ 1]  187 	jrne	00102$
      00009A 4F               [ 1]  188 	clr	a
      00009B 81               [ 4]  189 	ret
      00009C                        190 00102$:
                                    191 ;	user/rtc.c: 82: res=SoftI2CWriteByte(address);
      00009C 7B 03            [ 1]  192 	ld	a, (0x03, sp)
      00009E 88               [ 1]  193 	push	a
      00009F CDr00r00         [ 4]  194 	call	_SoftI2CWriteByte
      0000A2 5B 01            [ 2]  195 	addw	sp, #1
                                    196 ;	user/rtc.c: 84: if(!res)    return FALSE;
      0000A4 4D               [ 1]  197 	tnz	a
      0000A5 26 02            [ 1]  198 	jrne	00104$
      0000A7 4F               [ 1]  199 	clr	a
      0000A8 81               [ 4]  200 	ret
      0000A9                        201 00104$:
                                    202 ;	user/rtc.c: 86: res=SoftI2CWriteByte(data);   
      0000A9 7B 04            [ 1]  203 	ld	a, (0x04, sp)
      0000AB 88               [ 1]  204 	push	a
      0000AC CDr00r00         [ 4]  205 	call	_SoftI2CWriteByte
      0000AF 5B 01            [ 2]  206 	addw	sp, #1
                                    207 ;	user/rtc.c: 88: if(!res)    return FALSE;
      0000B1 4D               [ 1]  208 	tnz	a
      0000B2 26 02            [ 1]  209 	jrne	00106$
      0000B4 4F               [ 1]  210 	clr	a
      0000B5 81               [ 4]  211 	ret
      0000B6                        212 00106$:
                                    213 ;	user/rtc.c: 90: SoftI2CStop();
      0000B6 CDr00r00         [ 4]  214 	call	_SoftI2CStop
                                    215 ;	user/rtc.c: 91: enableInterrupts();
      0000B9 9A               [ 1]  216 	rim
                                    217 ;	user/rtc.c: 92: return TRUE;
      0000BA A6 01            [ 1]  218 	ld	a, #0x01
      0000BC 81               [ 4]  219 	ret
                                    220 ;	user/rtc.c: 95: void RTC_GetDateTime(RTC_TIME* time) 
                                    221 ;	-----------------------------------------
                                    222 ;	 function RTC_GetDateTime
                                    223 ;	-----------------------------------------
      0000BD                        224 _RTC_GetDateTime:
      0000BD 52 18            [ 2]  225 	sub	sp, #24
                                    226 ;	user/rtc.c: 99: for(i=0;i<8;i++)
      0000BF 96               [ 1]  227 	ldw	x, sp
      0000C0 5C               [ 2]  228 	incw	x
      0000C1 1F 17            [ 2]  229 	ldw	(0x17, sp), x
      0000C3 4F               [ 1]  230 	clr	a
      0000C4                        231 00107$:
                                    232 ;	user/rtc.c: 101: status = DS1307Read(i, &data[i]);
      0000C4 5F               [ 1]  233 	clrw	x
      0000C5 97               [ 1]  234 	ld	xl, a
      0000C6 72 FB 17         [ 2]  235 	addw	x, (0x17, sp)
      0000C9 88               [ 1]  236 	push	a
      0000CA 89               [ 2]  237 	pushw	x
      0000CB 88               [ 1]  238 	push	a
      0000CC CDr00r3D         [ 4]  239 	call	_DS1307Read
      0000CF 5B 03            [ 2]  240 	addw	sp, #3
      0000D1 84               [ 1]  241 	pop	a
                                    242 ;	user/rtc.c: 99: for(i=0;i<8;i++)
      0000D2 4C               [ 1]  243 	inc	a
      0000D3 A1 08            [ 1]  244 	cp	a, #0x08
      0000D5 25 ED            [ 1]  245 	jrc	00107$
                                    246 ;	user/rtc.c: 105: time->sec = BCD2BIN(data[0]&=0x7F);
      0000D7 16 1B            [ 2]  247 	ldw	y, (0x1b, sp)
      0000D9 17 15            [ 2]  248 	ldw	(0x15, sp), y
      0000DB 1E 17            [ 2]  249 	ldw	x, (0x17, sp)
      0000DD F6               [ 1]  250 	ld	a, (x)
      0000DE A4 7F            [ 1]  251 	and	a, #0x7f
      0000E0 1E 17            [ 2]  252 	ldw	x, (0x17, sp)
      0000E2 F7               [ 1]  253 	ld	(x), a
      0000E3 88               [ 1]  254 	push	a
      0000E4 CDr02r38         [ 4]  255 	call	_BCD2BIN
      0000E7 5B 01            [ 2]  256 	addw	sp, #1
      0000E9 1E 15            [ 2]  257 	ldw	x, (0x15, sp)
      0000EB F7               [ 1]  258 	ld	(x), a
                                    259 ;	user/rtc.c: 106: time->min = BCD2BIN(data[1]&=0x7F);
      0000EC 1E 15            [ 2]  260 	ldw	x, (0x15, sp)
      0000EE 5C               [ 2]  261 	incw	x
      0000EF 1F 13            [ 2]  262 	ldw	(0x13, sp), x
      0000F1 1E 17            [ 2]  263 	ldw	x, (0x17, sp)
      0000F3 5C               [ 2]  264 	incw	x
      0000F4 F6               [ 1]  265 	ld	a, (x)
      0000F5 A4 7F            [ 1]  266 	and	a, #0x7f
      0000F7 F7               [ 1]  267 	ld	(x), a
      0000F8 88               [ 1]  268 	push	a
      0000F9 CDr02r38         [ 4]  269 	call	_BCD2BIN
      0000FC 5B 01            [ 2]  270 	addw	sp, #1
      0000FE 1E 13            [ 2]  271 	ldw	x, (0x13, sp)
      000100 F7               [ 1]  272 	ld	(x), a
                                    273 ;	user/rtc.c: 107: if((data[2]&0x40)!=0)time->hour=BCD2BIN(data[2]&=0x1F);
      000101 1E 17            [ 2]  274 	ldw	x, (0x17, sp)
      000103 5C               [ 2]  275 	incw	x
      000104 5C               [ 2]  276 	incw	x
      000105 F6               [ 1]  277 	ld	a, (x)
      000106 16 15            [ 2]  278 	ldw	y, (0x15, sp)
      000108 90 5C            [ 2]  279 	incw	y
      00010A 90 5C            [ 2]  280 	incw	y
      00010C 17 09            [ 2]  281 	ldw	(0x09, sp), y
      00010E A5 40            [ 1]  282 	bcp	a, #0x40
      000110 27 0E            [ 1]  283 	jreq	00105$
      000112 A4 1F            [ 1]  284 	and	a, #0x1f
      000114 F7               [ 1]  285 	ld	(x), a
      000115 88               [ 1]  286 	push	a
      000116 CDr02r38         [ 4]  287 	call	_BCD2BIN
      000119 5B 01            [ 2]  288 	addw	sp, #1
      00011B 1E 09            [ 2]  289 	ldw	x, (0x09, sp)
      00011D F7               [ 1]  290 	ld	(x), a
      00011E 20 0C            [ 2]  291 	jra	00106$
      000120                        292 00105$:
                                    293 ;	user/rtc.c: 108: else time->hour=BCD2BIN(data[2]&=0x3F);
      000120 A4 3F            [ 1]  294 	and	a, #0x3f
      000122 F7               [ 1]  295 	ld	(x), a
      000123 88               [ 1]  296 	push	a
      000124 CDr02r38         [ 4]  297 	call	_BCD2BIN
      000127 5B 01            [ 2]  298 	addw	sp, #1
      000129 1E 09            [ 2]  299 	ldw	x, (0x09, sp)
      00012B F7               [ 1]  300 	ld	(x), a
      00012C                        301 00106$:
                                    302 ;	user/rtc.c: 109: time->day = BCD2BIN(data[3]&=0x07);
      00012C 1E 15            [ 2]  303 	ldw	x, (0x15, sp)
      00012E 1C 00 03         [ 2]  304 	addw	x, #0x0003
      000131 1F 11            [ 2]  305 	ldw	(0x11, sp), x
      000133 1E 17            [ 2]  306 	ldw	x, (0x17, sp)
      000135 1C 00 03         [ 2]  307 	addw	x, #0x0003
      000138 F6               [ 1]  308 	ld	a, (x)
      000139 A4 07            [ 1]  309 	and	a, #0x07
      00013B F7               [ 1]  310 	ld	(x), a
      00013C 88               [ 1]  311 	push	a
      00013D CDr02r38         [ 4]  312 	call	_BCD2BIN
      000140 5B 01            [ 2]  313 	addw	sp, #1
      000142 1E 11            [ 2]  314 	ldw	x, (0x11, sp)
      000144 F7               [ 1]  315 	ld	(x), a
                                    316 ;	user/rtc.c: 110: time->date = BCD2BIN(data[4]&=0x3F);
      000145 1E 15            [ 2]  317 	ldw	x, (0x15, sp)
      000147 1C 00 04         [ 2]  318 	addw	x, #0x0004
      00014A 1F 0F            [ 2]  319 	ldw	(0x0f, sp), x
      00014C 1E 17            [ 2]  320 	ldw	x, (0x17, sp)
      00014E 1C 00 04         [ 2]  321 	addw	x, #0x0004
      000151 F6               [ 1]  322 	ld	a, (x)
      000152 A4 3F            [ 1]  323 	and	a, #0x3f
      000154 F7               [ 1]  324 	ld	(x), a
      000155 88               [ 1]  325 	push	a
      000156 CDr02r38         [ 4]  326 	call	_BCD2BIN
      000159 5B 01            [ 2]  327 	addw	sp, #1
      00015B 1E 0F            [ 2]  328 	ldw	x, (0x0f, sp)
      00015D F7               [ 1]  329 	ld	(x), a
                                    330 ;	user/rtc.c: 111: time->month = BCD2BIN(data[5]&=0x1F);
      00015E 1E 15            [ 2]  331 	ldw	x, (0x15, sp)
      000160 1C 00 05         [ 2]  332 	addw	x, #0x0005
      000163 1F 0D            [ 2]  333 	ldw	(0x0d, sp), x
      000165 1E 17            [ 2]  334 	ldw	x, (0x17, sp)
      000167 1C 00 05         [ 2]  335 	addw	x, #0x0005
      00016A F6               [ 1]  336 	ld	a, (x)
      00016B A4 1F            [ 1]  337 	and	a, #0x1f
      00016D F7               [ 1]  338 	ld	(x), a
      00016E 88               [ 1]  339 	push	a
      00016F CDr02r38         [ 4]  340 	call	_BCD2BIN
      000172 5B 01            [ 2]  341 	addw	sp, #1
      000174 1E 0D            [ 2]  342 	ldw	x, (0x0d, sp)
      000176 F7               [ 1]  343 	ld	(x), a
                                    344 ;	user/rtc.c: 112: time->year = BCD2BIN(data[6]&=0xFF);
      000177 1E 15            [ 2]  345 	ldw	x, (0x15, sp)
      000179 1C 00 06         [ 2]  346 	addw	x, #0x0006
      00017C 1F 0B            [ 2]  347 	ldw	(0x0b, sp), x
      00017E 1E 17            [ 2]  348 	ldw	x, (0x17, sp)
      000180 1C 00 06         [ 2]  349 	addw	x, #0x0006
      000183 F6               [ 1]  350 	ld	a, (x)
      000184 F7               [ 1]  351 	ld	(x), a
      000185 88               [ 1]  352 	push	a
      000186 CDr02r38         [ 4]  353 	call	_BCD2BIN
      000189 5B 01            [ 2]  354 	addw	sp, #1
      00018B 1E 0B            [ 2]  355 	ldw	x, (0x0b, sp)
      00018D F7               [ 1]  356 	ld	(x), a
      00018E 5B 18            [ 2]  357 	addw	sp, #24
      000190 81               [ 4]  358 	ret
                                    359 ;	user/rtc.c: 115: void RTC_SetDateTime(RTC_TIME* time)
                                    360 ;	-----------------------------------------
                                    361 ;	 function RTC_SetDateTime
                                    362 ;	-----------------------------------------
      000191                        363 _RTC_SetDateTime:
      000191 52 0C            [ 2]  364 	sub	sp, #12
                                    365 ;	user/rtc.c: 119: data[0]=BIN2BCD(time->sec);
      000193 96               [ 1]  366 	ldw	x, sp
      000194 5C               [ 2]  367 	incw	x
      000195 1F 0B            [ 2]  368 	ldw	(0x0b, sp), x
      000197 16 0F            [ 2]  369 	ldw	y, (0x0f, sp)
      000199 17 09            [ 2]  370 	ldw	(0x09, sp), y
      00019B 1E 09            [ 2]  371 	ldw	x, (0x09, sp)
      00019D F6               [ 1]  372 	ld	a, (x)
      00019E 88               [ 1]  373 	push	a
      00019F CDr02r50         [ 4]  374 	call	_BIN2BCD
      0001A2 5B 01            [ 2]  375 	addw	sp, #1
      0001A4 1E 0B            [ 2]  376 	ldw	x, (0x0b, sp)
      0001A6 F7               [ 1]  377 	ld	(x), a
                                    378 ;	user/rtc.c: 120: data[1]=BIN2BCD(time->min);
      0001A7 1E 0B            [ 2]  379 	ldw	x, (0x0b, sp)
      0001A9 5C               [ 2]  380 	incw	x
      0001AA 16 09            [ 2]  381 	ldw	y, (0x09, sp)
      0001AC 90 E6 01         [ 1]  382 	ld	a, (0x1, y)
      0001AF 89               [ 2]  383 	pushw	x
      0001B0 88               [ 1]  384 	push	a
      0001B1 CDr02r50         [ 4]  385 	call	_BIN2BCD
      0001B4 5B 01            [ 2]  386 	addw	sp, #1
      0001B6 85               [ 2]  387 	popw	x
      0001B7 F7               [ 1]  388 	ld	(x), a
                                    389 ;	user/rtc.c: 121: data[2]=BIN2BCD(time->hour);
      0001B8 1E 0B            [ 2]  390 	ldw	x, (0x0b, sp)
      0001BA 5C               [ 2]  391 	incw	x
      0001BB 5C               [ 2]  392 	incw	x
      0001BC 16 09            [ 2]  393 	ldw	y, (0x09, sp)
      0001BE 90 E6 02         [ 1]  394 	ld	a, (0x2, y)
      0001C1 89               [ 2]  395 	pushw	x
      0001C2 88               [ 1]  396 	push	a
      0001C3 CDr02r50         [ 4]  397 	call	_BIN2BCD
      0001C6 5B 01            [ 2]  398 	addw	sp, #1
      0001C8 85               [ 2]  399 	popw	x
      0001C9 F7               [ 1]  400 	ld	(x), a
                                    401 ;	user/rtc.c: 122: data[3]=BIN2BCD(time->day);
      0001CA 1E 0B            [ 2]  402 	ldw	x, (0x0b, sp)
      0001CC 1C 00 03         [ 2]  403 	addw	x, #0x0003
      0001CF 16 09            [ 2]  404 	ldw	y, (0x09, sp)
      0001D1 90 E6 03         [ 1]  405 	ld	a, (0x3, y)
      0001D4 89               [ 2]  406 	pushw	x
      0001D5 88               [ 1]  407 	push	a
      0001D6 CDr02r50         [ 4]  408 	call	_BIN2BCD
      0001D9 5B 01            [ 2]  409 	addw	sp, #1
      0001DB 85               [ 2]  410 	popw	x
      0001DC F7               [ 1]  411 	ld	(x), a
                                    412 ;	user/rtc.c: 123: data[4]=BIN2BCD(time->date);
      0001DD 1E 0B            [ 2]  413 	ldw	x, (0x0b, sp)
      0001DF 1C 00 04         [ 2]  414 	addw	x, #0x0004
      0001E2 16 09            [ 2]  415 	ldw	y, (0x09, sp)
      0001E4 90 E6 04         [ 1]  416 	ld	a, (0x4, y)
      0001E7 89               [ 2]  417 	pushw	x
      0001E8 88               [ 1]  418 	push	a
      0001E9 CDr02r50         [ 4]  419 	call	_BIN2BCD
      0001EC 5B 01            [ 2]  420 	addw	sp, #1
      0001EE 85               [ 2]  421 	popw	x
      0001EF F7               [ 1]  422 	ld	(x), a
                                    423 ;	user/rtc.c: 124: data[5]=BIN2BCD(time->month);
      0001F0 1E 0B            [ 2]  424 	ldw	x, (0x0b, sp)
      0001F2 1C 00 05         [ 2]  425 	addw	x, #0x0005
      0001F5 16 09            [ 2]  426 	ldw	y, (0x09, sp)
      0001F7 90 E6 05         [ 1]  427 	ld	a, (0x5, y)
      0001FA 89               [ 2]  428 	pushw	x
      0001FB 88               [ 1]  429 	push	a
      0001FC CDr02r50         [ 4]  430 	call	_BIN2BCD
      0001FF 5B 01            [ 2]  431 	addw	sp, #1
      000201 85               [ 2]  432 	popw	x
      000202 F7               [ 1]  433 	ld	(x), a
                                    434 ;	user/rtc.c: 125: data[6]=BIN2BCD(time->year);
      000203 1E 0B            [ 2]  435 	ldw	x, (0x0b, sp)
      000205 1C 00 06         [ 2]  436 	addw	x, #0x0006
      000208 16 09            [ 2]  437 	ldw	y, (0x09, sp)
      00020A 90 E6 06         [ 1]  438 	ld	a, (0x6, y)
      00020D 89               [ 2]  439 	pushw	x
      00020E 88               [ 1]  440 	push	a
      00020F CDr02r50         [ 4]  441 	call	_BIN2BCD
      000212 5B 01            [ 2]  442 	addw	sp, #1
      000214 85               [ 2]  443 	popw	x
      000215 F7               [ 1]  444 	ld	(x), a
                                    445 ;	user/rtc.c: 126: data[7]=0;
      000216 1E 0B            [ 2]  446 	ldw	x, (0x0b, sp)
      000218 1C 00 07         [ 2]  447 	addw	x, #0x0007
      00021B 7F               [ 1]  448 	clr	(x)
                                    449 ;	user/rtc.c: 127: for(i=0;i<8;i++)
      00021C 4F               [ 1]  450 	clr	a
      00021D                        451 00104$:
                                    452 ;	user/rtc.c: 129: status = DS1307Write(i, data[i]);
      00021D 5F               [ 1]  453 	clrw	x
      00021E 97               [ 1]  454 	ld	xl, a
      00021F 72 FB 0B         [ 2]  455 	addw	x, (0x0b, sp)
      000222 88               [ 1]  456 	push	a
      000223 F6               [ 1]  457 	ld	a, (x)
      000224 97               [ 1]  458 	ld	xl, a
      000225 84               [ 1]  459 	pop	a
      000226 88               [ 1]  460 	push	a
      000227 89               [ 2]  461 	pushw	x
      000228 5B 01            [ 2]  462 	addw	sp, #1
      00022A 88               [ 1]  463 	push	a
      00022B CDr00r8C         [ 4]  464 	call	_DS1307Write
      00022E 85               [ 2]  465 	popw	x
      00022F 84               [ 1]  466 	pop	a
                                    467 ;	user/rtc.c: 127: for(i=0;i<8;i++)
      000230 4C               [ 1]  468 	inc	a
      000231 A1 08            [ 1]  469 	cp	a, #0x08
      000233 25 E8            [ 1]  470 	jrc	00104$
      000235 5B 0C            [ 2]  471 	addw	sp, #12
      000237 81               [ 4]  472 	ret
                                    473 ;	user/rtc.c: 135: uint8_t BCD2BIN(uint8_t data)
                                    474 ;	-----------------------------------------
                                    475 ;	 function BCD2BIN
                                    476 ;	-----------------------------------------
      000238                        477 _BCD2BIN:
      000238 88               [ 1]  478 	push	a
                                    479 ;	user/rtc.c: 138: high=(data>>4)&0x0F;
      000239 7B 04            [ 1]  480 	ld	a, (0x04, sp)
      00023B 4E               [ 1]  481 	swap	a
      00023C A4 0F            [ 1]  482 	and	a, #0x0f
      00023E A4 0F            [ 1]  483 	and	a, #0x0f
      000240 97               [ 1]  484 	ld	xl, a
                                    485 ;	user/rtc.c: 139: low=data&0x0F;
      000241 7B 04            [ 1]  486 	ld	a, (0x04, sp)
      000243 A4 0F            [ 1]  487 	and	a, #0x0f
      000245 6B 01            [ 1]  488 	ld	(0x01, sp), a
                                    489 ;	user/rtc.c: 140: return ((high*10)+low);
      000247 A6 0A            [ 1]  490 	ld	a, #0x0a
      000249 42               [ 4]  491 	mul	x, a
      00024A 9F               [ 1]  492 	ld	a, xl
      00024B 1B 01            [ 1]  493 	add	a, (0x01, sp)
      00024D 5B 01            [ 2]  494 	addw	sp, #1
      00024F 81               [ 4]  495 	ret
                                    496 ;	user/rtc.c: 143: uint8_t BIN2BCD(uint8_t data)
                                    497 ;	-----------------------------------------
                                    498 ;	 function BIN2BCD
                                    499 ;	-----------------------------------------
      000250                        500 _BIN2BCD:
      000250 88               [ 1]  501 	push	a
                                    502 ;	user/rtc.c: 146: high=data/10; high =(high<<4)&0xF0;
      000251 5F               [ 1]  503 	clrw	x
      000252 7B 04            [ 1]  504 	ld	a, (0x04, sp)
      000254 97               [ 1]  505 	ld	xl, a
      000255 A6 0A            [ 1]  506 	ld	a, #0x0a
      000257 62               [ 2]  507 	div	x, a
      000258 9F               [ 1]  508 	ld	a, xl
      000259 4E               [ 1]  509 	swap	a
      00025A A4 F0            [ 1]  510 	and	a, #0xf0
      00025C A4 F0            [ 1]  511 	and	a, #0xf0
      00025E 6B 01            [ 1]  512 	ld	(0x01, sp), a
                                    513 ;	user/rtc.c: 147: low=data%10;  low&=0x0F;
      000260 5F               [ 1]  514 	clrw	x
      000261 7B 04            [ 1]  515 	ld	a, (0x04, sp)
      000263 97               [ 1]  516 	ld	xl, a
      000264 A6 0A            [ 1]  517 	ld	a, #0x0a
      000266 62               [ 2]  518 	div	x, a
      000267 A4 0F            [ 1]  519 	and	a, #0x0f
                                    520 ;	user/rtc.c: 148: return ((high)|low);
      000269 1A 01            [ 1]  521 	or	a, (0x01, sp)
      00026B 5B 01            [ 2]  522 	addw	sp, #1
      00026D 81               [ 4]  523 	ret
                                    524 ;	user/rtc.c: 152: void RTC_CalcTime(DATE_TIME *dt, uint32_t unixTime)
                                    525 ;	-----------------------------------------
                                    526 ;	 function RTC_CalcTime
                                    527 ;	-----------------------------------------
      00026E                        528 _RTC_CalcTime:
      00026E 52 08            [ 2]  529 	sub	sp, #8
                                    530 ;	user/rtc.c: 156: epoch = unixTime;
      000270 16 0F            [ 2]  531 	ldw	y, (0x0f, sp)
      000272 17 03            [ 2]  532 	ldw	(0x03, sp), y
      000274 16 0D            [ 2]  533 	ldw	y, (0x0d, sp)
      000276 17 01            [ 2]  534 	ldw	(0x01, sp), y
                                    535 ;	user/rtc.c: 157: gt = localtime(&epoch);			
      000278 96               [ 1]  536 	ldw	x, sp
      000279 5C               [ 2]  537 	incw	x
      00027A 89               [ 2]  538 	pushw	x
      00027B CDr00r00         [ 4]  539 	call	_localtime
      00027E 5B 02            [ 2]  540 	addw	sp, #2
      000280 1F 05            [ 2]  541 	ldw	(0x05, sp), x
                                    542 ;	user/rtc.c: 158: dt->sec = gt->tm_sec;
      000282 16 0B            [ 2]  543 	ldw	y, (0x0b, sp)
      000284 17 07            [ 2]  544 	ldw	(0x07, sp), y
      000286 1E 07            [ 2]  545 	ldw	x, (0x07, sp)
      000288 1C 00 07         [ 2]  546 	addw	x, #0x0007
      00028B 16 05            [ 2]  547 	ldw	y, (0x05, sp)
      00028D 90 F6            [ 1]  548 	ld	a, (y)
      00028F F7               [ 1]  549 	ld	(x), a
                                    550 ;	user/rtc.c: 159: dt->min = gt->tm_min;
      000290 1E 07            [ 2]  551 	ldw	x, (0x07, sp)
      000292 1C 00 06         [ 2]  552 	addw	x, #0x0006
      000295 16 05            [ 2]  553 	ldw	y, (0x05, sp)
      000297 90 E6 01         [ 1]  554 	ld	a, (0x1, y)
      00029A F7               [ 1]  555 	ld	(x), a
                                    556 ;	user/rtc.c: 160: dt->hour = gt->tm_hour;
      00029B 1E 07            [ 2]  557 	ldw	x, (0x07, sp)
      00029D 1C 00 05         [ 2]  558 	addw	x, #0x0005
      0002A0 16 05            [ 2]  559 	ldw	y, (0x05, sp)
      0002A2 90 E6 02         [ 1]  560 	ld	a, (0x2, y)
      0002A5 F7               [ 1]  561 	ld	(x), a
                                    562 ;	user/rtc.c: 161: dt->mday = gt->tm_mday;
      0002A6 1E 07            [ 2]  563 	ldw	x, (0x07, sp)
      0002A8 1C 00 03         [ 2]  564 	addw	x, #0x0003
      0002AB 16 05            [ 2]  565 	ldw	y, (0x05, sp)
      0002AD 90 E6 03         [ 1]  566 	ld	a, (0x3, y)
      0002B0 F7               [ 1]  567 	ld	(x), a
                                    568 ;	user/rtc.c: 162: dt->wday = gt->tm_wday + 1;				// tm_wday 0 - 6 (0 = sunday)
      0002B1 1E 07            [ 2]  569 	ldw	x, (0x07, sp)
      0002B3 1C 00 04         [ 2]  570 	addw	x, #0x0004
      0002B6 16 05            [ 2]  571 	ldw	y, (0x05, sp)
      0002B8 90 E6 07         [ 1]  572 	ld	a, (0x7, y)
      0002BB 4C               [ 1]  573 	inc	a
      0002BC F7               [ 1]  574 	ld	(x), a
                                    575 ;	user/rtc.c: 163: dt->month = gt->tm_mon + 1;				// tm_mon 0 - 11 (0 = Jan)
      0002BD 1E 07            [ 2]  576 	ldw	x, (0x07, sp)
      0002BF 5C               [ 2]  577 	incw	x
      0002C0 5C               [ 2]  578 	incw	x
      0002C1 16 05            [ 2]  579 	ldw	y, (0x05, sp)
      0002C3 90 E6 04         [ 1]  580 	ld	a, (0x4, y)
      0002C6 4C               [ 1]  581 	inc	a
      0002C7 F7               [ 1]  582 	ld	(x), a
                                    583 ;	user/rtc.c: 164: dt->year = gt->tm_year + 1900;		// tm_year = current year - 1900
      0002C8 1E 05            [ 2]  584 	ldw	x, (0x05, sp)
      0002CA EE 05            [ 2]  585 	ldw	x, (0x5, x)
      0002CC 1C 07 6C         [ 2]  586 	addw	x, #0x076c
      0002CF 16 07            [ 2]  587 	ldw	y, (0x07, sp)
      0002D1 90 FF            [ 2]  588 	ldw	(y), x
      0002D3 5B 08            [ 2]  589 	addw	sp, #8
      0002D5 81               [ 4]  590 	ret
                                    591 ;	user/rtc.c: 167: uint32_t RTC_GetUnixTimestamp(DATE_TIME *dt)
                                    592 ;	-----------------------------------------
                                    593 ;	 function RTC_GetUnixTimestamp
                                    594 ;	-----------------------------------------
      0002D6                        595 _RTC_GetUnixTimestamp:
      0002D6 52 10            [ 2]  596 	sub	sp, #16
                                    597 ;	user/rtc.c: 171: t.tm_year = dt->year - 1900;
      0002D8 96               [ 1]  598 	ldw	x, sp
      0002D9 5C               [ 2]  599 	incw	x
      0002DA 1F 0F            [ 2]  600 	ldw	(0x0f, sp), x
      0002DC 1E 0F            [ 2]  601 	ldw	x, (0x0f, sp)
      0002DE 1C 00 05         [ 2]  602 	addw	x, #0x0005
      0002E1 16 13            [ 2]  603 	ldw	y, (0x13, sp)
      0002E3 17 0D            [ 2]  604 	ldw	(0x0d, sp), y
      0002E5 16 0D            [ 2]  605 	ldw	y, (0x0d, sp)
      0002E7 90 FE            [ 2]  606 	ldw	y, (y)
      0002E9 72 A2 07 6C      [ 2]  607 	subw	y, #0x076c
      0002ED FF               [ 2]  608 	ldw	(x), y
                                    609 ;	user/rtc.c: 172: t.tm_mon = dt->month - 1; 				// Month, 0 - jan
      0002EE 1E 0F            [ 2]  610 	ldw	x, (0x0f, sp)
      0002F0 1C 00 04         [ 2]  611 	addw	x, #0x0004
      0002F3 16 0D            [ 2]  612 	ldw	y, (0x0d, sp)
      0002F5 90 E6 02         [ 1]  613 	ld	a, (0x2, y)
      0002F8 4A               [ 1]  614 	dec	a
      0002F9 F7               [ 1]  615 	ld	(x), a
                                    616 ;	user/rtc.c: 173: t.tm_mday = dt->mday; 						// Day of the month
      0002FA 1E 0F            [ 2]  617 	ldw	x, (0x0f, sp)
      0002FC 1C 00 03         [ 2]  618 	addw	x, #0x0003
      0002FF 16 0D            [ 2]  619 	ldw	y, (0x0d, sp)
      000301 90 E6 03         [ 1]  620 	ld	a, (0x3, y)
      000304 F7               [ 1]  621 	ld	(x), a
                                    622 ;	user/rtc.c: 174: t.tm_hour = dt->hour;
      000305 1E 0F            [ 2]  623 	ldw	x, (0x0f, sp)
      000307 5C               [ 2]  624 	incw	x
      000308 5C               [ 2]  625 	incw	x
      000309 16 0D            [ 2]  626 	ldw	y, (0x0d, sp)
      00030B 90 E6 05         [ 1]  627 	ld	a, (0x5, y)
      00030E F7               [ 1]  628 	ld	(x), a
                                    629 ;	user/rtc.c: 175: t.tm_min = dt->min;
      00030F 1E 0F            [ 2]  630 	ldw	x, (0x0f, sp)
      000311 5C               [ 2]  631 	incw	x
      000312 16 0D            [ 2]  632 	ldw	y, (0x0d, sp)
      000314 90 E6 06         [ 1]  633 	ld	a, (0x6, y)
      000317 F7               [ 1]  634 	ld	(x), a
                                    635 ;	user/rtc.c: 176: t.tm_sec = dt->sec;
      000318 1E 0D            [ 2]  636 	ldw	x, (0x0d, sp)
      00031A E6 07            [ 1]  637 	ld	a, (0x7, x)
      00031C 1E 0F            [ 2]  638 	ldw	x, (0x0f, sp)
      00031E F7               [ 1]  639 	ld	(x), a
                                    640 ;	user/rtc.c: 177: t.tm_isdst = -1; 									// Is DST on? 1 = yes, 0 = no, -1 = unknown
      00031F 1E 0F            [ 2]  641 	ldw	x, (0x0f, sp)
      000321 A6 FF            [ 1]  642 	ld	a, #0xff
      000323 E7 0A            [ 1]  643 	ld	(0x000a, x), a
                                    644 ;	user/rtc.c: 178: t_of_day = mktime(&t);
      000325 1E 0F            [ 2]  645 	ldw	x, (0x0f, sp)
      000327 89               [ 2]  646 	pushw	x
      000328 CDr00r00         [ 4]  647 	call	_mktime
                                    648 ;	user/rtc.c: 179: return (uint32_t)t_of_day; 
      00032B 5B 12            [ 2]  649 	addw	sp, #18
      00032D 81               [ 4]  650 	ret
                                    651 	.area CODE
                                    652 	.area INITIALIZER
                                    653 	.area CABS (ABS)
